#!/bin/bash

# Help function
show_help() {
    echo "Usage: ./runtask <environment> <task>"
    echo ""
    echo "Environment:"
    echo "  dev     Development environment"
    echo "  prod    Production environment"
    echo ""
    echo "Tasks:"
    echo "  build   Build the Docker image"
    echo "  push    Push image to ECR"
    echo "  deploy  Deploy to ECS"
    echo "  migrate Run database migrations"
    echo "  all     Execute build, push, and deploy in sequence"
    echo ""
    echo "Example:"
    echo "  ./runtask dev build    # Build for development"
    echo "  ./runtask prod all     # Build, push, and deploy to production"
    echo "  ./runtask prod migrate # Run migrations in production"
}

# Validate arguments
if [ $# -lt 2 ]; then
    show_help
    exit 1
fi

ENVIRONMENT=$1
TASK=$2

# Validate environment
if [[ "$ENVIRONMENT" != "dev" && "$ENVIRONMENT" != "prod" ]]; then
    echo "Error: Invalid environment. Use 'dev' or 'prod'"
    exit 1
fi

# Validate task
if [[ "$TASK" != "build" && "$TASK" != "push" && "$TASK" != "deploy" && "$TASK" != "migrate" && "$TASK" != "all" ]]; then
    echo "Error: Invalid task. Use 'build', 'push', 'deploy', 'migrate', or 'all'"
    exit 1
fi

# Get script directory
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

# Set script path
SCRIPTS_PATH="${SCRIPT_DIR}"

# Set repository name based on environment
REPO_PREFIX=""
if [ "$ENVIRONMENT" == "dev" ]; then
    REPO_PREFIX="dev-"
fi

# Execute requested task
run_task() {
    local task=$1
    local script="${SCRIPTS_PATH}/${task}.sh"
    
    if [ ! -f "$script" ]; then
        echo "Error: Script not found: $script"
        exit 1
    fi
    
    echo "Executing ${ENVIRONMENT} ${task}..."
    bash "$script" "$ENVIRONMENT" "$REPO_PREFIX"
    
    if [ $? -ne 0 ]; then
        echo "Error: ${task} failed"
        exit 1
    fi
}

# Execute tasks
if [ "$TASK" == "all" ]; then
    run_task "build"
    run_task "push"
    run_task "deploy"
elif [ "$TASK" == "migrate" ]; then
    run_task "run-migrations"
else
    run_task "$TASK"
fi
